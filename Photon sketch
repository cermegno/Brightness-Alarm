// ---------------------------------
// Turn ON LED if light is excessive
// ---------------------------------
// In this example, we're going to register a Spark.variable() with the cloud so that we can read brightness levels from the photoresistor.
// We'll also register a Spark.function so that we can turn the LED on and off remotely.

// We're going to start by declaring which pins everything is plugged into.

int led = D0; // This is where your LED is plugged in. The other side goes to a resistor connected to GND.
int photoresistor = A0; // This is where your photoresistor is plugged in. The other side goes to the "power" pin (below).
int power = A5; // This is the other end of your photoresistor. The other side is plugged into the "photoresistor" pin (above).
// The reason we have plugged one side into an analog pin instead of to "power" is because we want a very steady voltage to be sent to the photoresistor.
// That way, when we read the value from the other side of the photoresistor, we can accurately calculate a voltage drop.

int lightlevel; // Here we are declaring the integer variable analogvalue, which we will use later to store the value of the photoresistor.
int maxlightlevel=1000;

// Next we go into the setup function.

void setup() {

    Serial.begin(9600);
    //First, declare all of our pins. This lets our device know which ones will be used for outputting voltage, and which ones will read incoming voltage.
    pinMode(led,OUTPUT); // Our LED pin is output (lighting up the LED)
    pinMode(photoresistor,INPUT);  // Our photoresistor pin is input (reading the photoresistor)
    pinMode(power,OUTPUT); // The pin powering the photoresistor is output (sending out consistent power)

    // Next, write the power of the photoresistor to be the maximum possible, so that we can use this for power.
    digitalWrite(power,HIGH);

    // We are going to declare a Spark.variable() here so that we can access the value of the photoresistor from the cloud.
    Spark.variable("analogvalue", &lightlevel, INT);
    // This is saying that when we ask the cloud for "analogvalue", this will reference the variable analogvalue in this app, which is an integer variable.
    
}

void loop() {

    // check to see what the value of the photoresistor is and store it in the int variable analogvalue
    lightlevel = analogRead(photoresistor);
    if (lightlevel>maxlightlevel){
        digitalWrite(led,HIGH);
    } else {
        digitalWrite(led,LOW);
    }
    Serial.print("Radiation = ");
    Serial.println(lightlevel);
    delay (2000);

}

